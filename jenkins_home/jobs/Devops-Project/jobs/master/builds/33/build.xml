<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.23">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.triggers.SCMTrigger_-SCMTriggerCause/>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.triggers.SCMTrigger_-BuildAction/>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.9">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.54">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <hudson.plugins.git.util.BuildData plugin="git@3.9.1">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@2.7.3">
              <sha1>964ccdf0111179d81d3242ddbbe693a63ba761fd</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>33</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>ssh://git@git-server:22/git-server/repos/webapp.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@3.9.1">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>refs/remotes/origin/master</string>
          <list/>
        </entry>
      </tags>
      <ws>/var/jenkins_home/workspace/Devops-Project/master</ws>
    </hudson.plugins.git.GitTagAction>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.6">
      <revisionStates>
        <entry>
          <string>git ssh://git@git-server:22/git-server/repos/webapp.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
  </actions>
  <queueId>97</queueId>
  <timestamp>1588302047942</timestamp>
  <startTime>1588302047968</startTime>
  <result>FAILURE</result>
  <duration>17313</duration>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>timestamps {
    def projectName = &quot;webapp&quot;
    def privateRegistryName = &quot;localhost:5000&quot;
    def job_name_token = &quot;${JOB_NAME}&quot;.split(&apos;/&apos;)
    def job_branch_name = &quot;${job_name_token[1]}&quot;
            
            
    node {
        stage(&apos;Check out SCM&apos;) {
            echo &quot;Cleaning Workspace...&quot;
            sh &quot;rm -fr ./*&quot;
            echo &quot;Checking out code...&quot;
            checkout scm
        }

        stage(&apos;Unit Test&apos;) {
            echo &quot;Running unit tests...&quot;
            //RUN UNIT TEST
            //sh &quot;npm install&quot;
            //sh &quot;npm run test&quot;
        }  

        stage(&apos;Build Image&apos;) { 
            echo &quot;Building Image&quot;
            def buildImage = docker.build(&quot;${projectName}:${BUILD_NUMBER}&quot;)
            echo &quot;--------------IMAGE BUILT: ${projectName}:${BUILD_NUMBER}--------------&quot;
        }

        stage(&apos;Acceptance Test&apos;) { 
            echo &quot;Running cucumber test scripts...&quot;
            //sh &quot;docker run --rm ${projectName}:${BUILD_NUMBER}
            //RUN CUCUMBER TESTS
        }

        stage(&apos;Push Image to Registry&apos;) { 
            echo &quot;BRANCH NAME IS: ${job_branch_name}&quot;
            if(job_branch_name.equalsIgnoreCase(&quot;master&quot;)) {
                sh &quot;docker tag ${projectName}:${BUILD_NUMBER} ${privateRegistryName}/${projectName}:${BUILD_NUMBER}&quot;
                sh &quot;docker push ${privateRegistryName}/${projectName}:${BUILD_NUMBER}&quot;
                echo &quot;--------------LATEST IMAGE PUSHED: ${projectName}:${BUILD_NUMBER}--------------&quot;
            }
        }

        stage(&apos;Deploy&apos;) {
            def deploymentOption = steps.input message: &apos;Deploy specific version of image&apos;, parameters: [
                string(defaultValue: &quot;${BUILD_NUMBER}&quot;, name: &apos;DeployOption&apos;, description: &quot;Key in the version of image you want to deploy, default value is latest version&quot;)
            ]
            if (deploymentOption) {
                sh &quot;docker stop webapp; docker rm webapp&quot;
                sh &quot;docker run -p 8082:80 -d --name webapp localhost:5000/webapp:${deploymentOption}&quot;
                echo &quot;--------------IMAGE DEPLOYED: ${projectName}:${deploymentOption}--------------&quot;
            } else {
                echo &quot;No deployment as deployment option is empty&quot;
            }
        }

        stage(&apos;Clean up&apos;) {
            sh &quot;docker rmi -f ${projectName}:${BUILD_NUMBER} ${privateRegistryName}/${projectName}:${BUILD_NUMBER}&quot;
            sh &quot;rm -fr ./*&quot;
        }
    }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>804579300</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>7136671800</long>
      </entry>
      <entry>
        <string>run</string>
        <long>6872775600</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>1983612100</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>893998800</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>30</iota>
    <head>1:30</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>ssh://git@git-server:22/git-server/repos/webapp.git</url>
            <credentialsId>gitKey</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/Devops-Project/master</workspace>
      <changelogFile>/var/jenkins_home/jobs/Devops-Project/jobs/master/builds/33/changelog0.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>